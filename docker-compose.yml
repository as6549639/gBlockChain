version: '2.3'

services:
  gblockchain:
    build: ./
    ports:
     - "127.0.0.1:80:5000"
    links:
      - redis
      - mysql
    depends_on:
      - redis
      - mysql
    environment:
      - APP_ENVIRONMENT=DEVELOPMENT
      - DEBUG=True
    volumes:
      - ./data_logs:/logs:rw
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  nginx:
    image: nginx:1.13.9-alpine
    restart: always
    ports:
      - "5000:80"
    links:
      - gblockchain:backend
    depends_on:
      - gblockchain
    volumes:
      #- ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://backend:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s


  redis:
    image: redis:3.2.11-alpine
    restart: always
    ports:
     - "127.0.0.1:6379:6379"
    networks:
      - backend

  mysql:
    image: mysql:5.7.21
    restart: always
    ports:
     - "3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=blockchain
      - MYSQL_USER=flask
      - MYSQL_PASSWORD=flask
    volumes:
      - ./data_mysql:/var/lib/mysql
    networks:
      - backend


networks:
  backend:
    driver: bridge